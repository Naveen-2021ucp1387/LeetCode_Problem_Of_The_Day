/**********************200. Number of Islands - MEDIUM*************************/
class Solution {
public:
    int delrow[4] = {0, 1, 0, -1};
    int delcol[4] = {-1, 0, 1, 0};
    void dfs(int i, int j, vector<vector<char>>& grid,
             vector<vector<int>>& visit, int n, int m) {
        visit[i][j] = 1;
        for (int k = 0; k < 4; k++) {
            int nrow = i + delrow[k];
            int ncol = j + delcol[k];
            if (nrow < n && nrow >= 0 && ncol < m && ncol >= 0 &&
                grid[nrow][ncol] == '1' && visit[nrow][ncol] == 0) {
                dfs(nrow, ncol, grid, visit, n, m);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        int count = 0;
        vector<vector<int>> visit(n, vector<int>(m, 0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (grid[i][j] == '1' && visit[i][j] == 0) {
                    dfs(i, j, grid, visit, n, m);
                    count++;
                }
            }
        }
        return count;
    }
};
